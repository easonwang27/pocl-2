#### Compiling pocl on RiscV ####

## Dependencies:

- sudo apt-get -y install \
  binutils build-essential libtool texinfo \
  gzip zip unzip patchutils curl git \
  make cmake ninja-build automake bison flex gperf \
  grep sed gawk python bc \
  zlib1g-dev libexpat1-dev libmpc-dev \
  libglib2.0-dev libfdt-dev libpixman-1-dev       
 
## Building RiscV GNU Toolchain (gcc, binutils, etc..)

- git clone https://github.com/riscv/riscv-gnu-toolchain
- cd riscv-gnu-toolchain
- git submodule update --init --recursive
- mkdir build
- cd build
- newlib: ../configure --prefix=/home/blaise/dev/riscv-gnu-toolchain/drops --with-arch=rv32im --with-abi=ilp32
- linux: ../configure --prefix=/home/blaise/dev/riscv-gnu-toolchain/drops --with-arch=rv32ima --with-abi=ilp32
- make -j`nproc` && make -j`nproc` build-qemu

## Building LLVM for RiscV

- git clone -b release_90 https://github.com/llvm-mirror/llvm.git llvm
- git clone -b release_90 https://github.com/llvm-mirror/clang.git llvm/tools/clang
- cd llvm_riscv
- mkdir build
- cd build
- newlib: cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS=True -DLLVM_USE_SPLIT_DWARF=True -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/llvm_riscv/drops_riscv_newlib -DLLVM_OPTIMIZED_TABLEGEN=True -DLLVM_BUILD_TESTS=True -DDEFAULT_SYSROOT=/home/blaise/dev/riscv-gnu-toolchain/drops/riscv32-unknown-elf -DLLVM_DEFAULT_TARGET_TRIPLE="riscv32-unknown-elf" -DLLVM_TARGETS_TO_BUILD="RISCV" ..
- linux: cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS=True -DLLVM_USE_SPLIT_DWARF=True -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/llvm_riscv/drops_riscv_linux -DLLVM_OPTIMIZED_TABLEGEN=True -DLLVM_BUILD_TESTS=True -DDEFAULT_SYSROOT=/home/blaise/dev/riscv-gnu-toolchain/drops/sysroot  -DLLVM_DEFAULT_TARGET_TRIPLE="riscv32-unknown-linux-gnu" -DLLVM_TARGETS_TO_BUILD="RISCV" ..
- cmake --build . --target install
- register llvm pretty print extension for gdb: add "source /home/blaise/dev/llvm_riscv/utils/gdb-scripts/prettyprinters.py" to ~/.gdbinit

## Building LLVM for x86

- linux: cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS=True -DLLVM_USE_SPLIT_DWARF=True -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/llvm_riscv/drops_x86 -DLLVM_OPTIMIZED_TABLEGEN=True ..
- cmake --build . --target install
- register llvm pretty print extension for gdb: add "source /home/blaise/dev/llvm_riscv/utils/gdb-scripts/prettyprinters.py" to ~/.gdbinit

## Sanity test your new RISC-V LLVM

- cat hello.c
#include <stdio.h>
int main(int argc, char **argv) { printf("hello world\n"); }
- clang hello.c
- qemu-riscv32 hello

## build pocl for RISCV

- git clone https://github.com/pocl/pocl.git
- cd pocl
- mkdir build
- mkdir drop
- cd build
- poclcc-newlib: cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/pocl/drops_riscv_cc -DCMAKE_BUILD_TYPE=Debug -DWITH_LLVM_CONFIG=/home/blaise/dev/riscv-gnu-toolchain/drops/bin/llvm-config -DLLC_HOST_CPU= -DNEWLIB_BSP=ON -DBUILD_TESTS=OFF -DPOCL_DEBUG_MESSAGES=ON ..
- runtime-linux: cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/pocl/drops_riscv_rt -DCMAKE_BUILD_TYPE=Debug -DOCS_AVAILABLE=OFF -DHOST_DEVICE_BUILD_HASH=pthread-riscv32-unknown-linux-gnu -DCMAKE_TOOLCHAIN_FILE=../RISCV_linux.cmake -DBUILD_TESTS=OFF -DPOCL_DEBUG_MESSAGES=ON ..
- runtime-newlib: cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/pocl/drops_riscv_rt -DCMAKE_BUILD_TYPE=Debug -DOCS_AVAILABLE=OFF -DBUILD_SHARED_LIBS=OFF -DNEWLIB_BSP=ON -DBUILD_TESTS=OFF -DHOST_DEVICE_BUILD_HASH=basic-riscv32-unknown-elf -DCMAKE_TOOLCHAIN_FILE=../RISCV_newlib.cmake -DENABLE_TRACING=OFF -DENABLE_ICD=OFF -DPOCL_DEBUG_MESSAGES=ON ..
- cmake --build . --target install

## build pocl for x86

- ubuntu dependencies: sudo apt install -y build-essential ocl-icd-libopencl1 cmake git pkg-config libclang-dev clang llvm make ninja-build ocl-icd-libopencl1 ocl-icd-dev ocl-icd-opencl-dev libhwloc-dev zlib1g zlib1g-dev clinfo dialog apt-utils
- poclcc: cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/pocl/drops_x86_cc -DWITH_LLVM_CONFIG=/home/blaise/dev/llvm_riscv/drops_x86/bin/llvm-config -DCMAKE_BUILD_TYPE=Debug -DNEWLIB_BSP=ON -DBUILD_TESTS=OFF -DPOCL_DEBUG_MESSAGES=ON ..
- runtime: cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/home/blaise/dev/pocl/drops_x86_rt -DCMAKE_BUILD_TYPE=Debug -DOCS_AVAILABLE=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_TESTS=OFF -DHOST_DEVICE_BUILD_HASH=basic-x86_64-unknown-linux-gnu-skylake -DNEWLIB_BSP=ON -DPOCL_DEBUG_MESSAGES=ON ..
- cmake --build . --target install
